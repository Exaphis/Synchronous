version: "3.9"

services:
  nginx:
    image: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
      - frontend
      - tusd
  redis:
    image: redis
  db:
    image: postgres
    volumes:
      - ./db-data:/var/lib/postgresql/data
      - ./init-pg-dbs.sh:/docker-entrypoint-initdb.d/init-pg-dbs.sh
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
    env_file:
      - secrets.env
  backend:
    build: .
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      - db
    env_file:
      - secrets.env
  frontend:
    build: ./Frontend
    command: npm start
    ports:
      - "3000:3000"
    volumes:
      - ./Frontend:/app
  tusd:
    image: tusproject/tusd
    ports:
      - "1080:1080"
    command: -hooks-http http://backend:8000/tusd/ -max-size 10485760 -hooks-http-forward-headers Authorization -behind-proxy
  etherpad:
    build: etherpad-lite
    entrypoint: /custom-entrypoint.sh
    ports:
      - "9001:9001"
    volumes:
      - ./docker/etherpad/APIKEY.txt:/opt/etherpad-lite/APIKEY.txt
      - ./docker/etherpad/custom-entrypoint.sh:/custom-entrypoint.sh
    environment:
      SOFFICE: "/usr/bin/soffice"
      ADMIN_PASSWORD: "admin"
      DB_TYPE: "postgres"
      DB_HOST: "db"
      DB_PORT: "5432"
      DB_NAME: "etherpad"
      DB_USER: "etherpad"
    depends_on:
      - db
    env_file:
      - secrets.env
  spacedeck:
    build: spacedeck-open
    ports:
      - "9666:9666"
    depends_on:
      - db
    env_file:
      - secrets.env
